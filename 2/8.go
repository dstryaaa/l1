package main

import "fmt"

// Оператор new и функция make в Go используются для создания новых объектов, но в разных контекстах
// и для разных типов данных.

// Оператор new используется для выделения памяти для указателя на новый объект и возвращает
// указатель на этот объект. Этот оператор предназначен для создания указателей на типы данных,
// такие как структуры или объединения (union), а не для создания объектов этих типов.
// Оператор new не инициализирует новый объект.

type NPerson struct {
	Name string
	Age  int
}

func main() {
	person := new(NPerson)
	person.Name = "John"
	person.Age = 30
	fmt.Println(*person)
}

// Функция make используется для выделения памяти для объектов, которые могут расти или
// имеют фиксированную длину, такие как массивы, срезы (slice) и карты (map). Функция возвращает не
// указатель на объект, а сам объект со своими начальными значениями.

func main() {
	slice := make([]string, 3, 5)
	slice[0] = "a"
	slice[1] = "b"
	slice[2] = "c"
	fmt.Println(slice)
}

// В целом, оператор new используется для создания указателей на типы данных,
// а функция make -- для выделения памяти для объектов типов, которые могут расти или имеют фиксированную длину.
