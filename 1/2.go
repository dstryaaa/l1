package main

import (
	"fmt"
	"sync"
)

func main() {
	// Создаем массив чисел, квадраты которых будут вычислены и выведены
	nums := []int{2, 4, 6, 8, 10}
	// Создаем канал для передачи квадратов чисел между горутинами
	squareChan := make(chan int)
	// Создаем счетчик WaitGroup для отслеживания завершения горутин
	var wg sync.WaitGroup

	for _, num := range nums {
		// Увеличиваем счетчик горутин на 1
		wg.Add(1)
		// Создаем новую горутину и передаем ей число num
		go func(num int) {
			// Вычисляем квадрат числа
			square := num * num
			// Отправляем квадрат числа в канал squareChan
			squareChan <- square
			// Уменьшаем счетчик горутин на 1
			wg.Done()
		}(num)
	}

	// Создаем новую горутину для закрытия канала после завершения всех горутин вычисления квадратов чисел
	go func() {
		// Ждем, пока все горутины завершатся (счетчик станет равным 0)
		wg.Wait()
		// Закрываем канал squareChan
		close(squareChan)
	}()

	// Цикл для чтения квадратов чисел из канала и их вывода на экран
	for square := range squareChan {
		fmt.Println(square)
	}
}
